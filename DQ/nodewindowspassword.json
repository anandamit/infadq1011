{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "storageName": {
            "type": "string"
        },
        "storageID": {
            "type": "string"
        },
        "vnetName": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "subnetId": {
            "type": "string"
        },
        "nsgName": {
            "type": "string"
        },
        "dbVMName": {
            "type": "string"
        },
        "dbUser": {
            "type": "string"
        },
        "dbPassword": {
            "type": "securestring"
        },
        "nodeVMSize": {
            "type": "string"
        },
        "nodeVMOSType": {
            "type": "string"
        },
        "nodeVMAdminUsername": {
            "type": "string",
            "minLength": 1
        },
        "nodeVMAdminPassword": {
            "type": "securestring"
        },
        "nodeVMAdminSshPublicKey": {
            "type": "securestring"
        },
        "nodeVMNamePrefix": {
            "type": "string",
            "minLength": 1
        },
        "nodeVMCount": {
            "type": "int"
        },
        "infaDomainName": {
            "type": "string",
            "minLength": 4
        },
        "infaDomainUser": {
            "type": "string",
            "minLength": 4
        },
        "infaDomainPassword": {
            "type": "securestring",
            "minLength": 4
        },
        "infaNodeNamePrefix": {
            "type": "string",
            "minLength": 4
        },
        "infaKeyword": {
            "type": "securestring",
            "minLength": 4
        },
        "infaDomainLicense": {
            "type": "securestring"
        },
        "baseUrl": {
            "type": "string"
        },
        "informaticaTags": {
            "type": "object"
        }
    },
    "variables": {
        "index": 0,
        "nodeVMDNSName": "[toLower(concat(parameters('nodeVMNamePrefix'), add(variables('index'), 1), uniqueString(resourceGroup().id, deployment().name)))]",
        "nodeVMNicPrefix": "[concat(parameters('nodeVMNamePrefix'),'Nic')]",

        "extScriptURI": "[parameters('baseUrl')]",
        "extScriptFile": "wininfainstaller.ps1",

        "infaNodePort": 6005,
        "dbType": "MSSQLSERVER",
        "dbInstanceName": "model",
        "dbPort": "1433",

        "imagePublisher": "informatica",
        "imageOffer": "platform_10_1_1_multi_node_domain_windows_byol",
        "osVersion": "byol_windows_platform_10_1_1"
    },
    "resources": [
        {
            "name": "[variables('nodeVMDNSName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[parameters('location')]",
            "apiVersion": "2016-10-01",
            "dependsOn": [ ],

            "tags": {
                "displayName": "publicip",
                "provider": "[toUpper(parameters('informaticaTags').provider)]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('nodeVMDNSName')]"
                }
            }
        },
        {
            "name": "[concat(variables('nodeVMNicPrefix'), add(variables('index'), 1))]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('location')]",
            "apiVersion": "2016-10-01",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('nodeVMDNSName'))]"
            ],
            "tags": {
                "displayName": "niccard",
                "provider": "[toUpper(parameters('informaticaTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('nodeVMDNSName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                }
            }
        },
      {
        "name": "[concat(parameters('nodeVMNamePrefix'), add(variables('index'), 1))]",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[parameters('location')]",
        "apiVersion": "2016-03-30",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('nodeVMNicPrefix'), add(variables('index'), 1))]"
        ],

        /*"plan": {
                "name": "[variables('osVersion')]",
                "publisher": "[variables('imagePublisher')]",
                "product": "[variables('imageOffer')]"
         },*/
        "tags": {
          "displayName": "nodevm",
          "provider": "[toUpper(parameters('informaticaTags').provider)]"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('nodeVMSize')]"
          },
          "osProfile": {
            "computerName": "[concat(parameters('nodeVMNamePrefix'), add(variables('index'), 1))]",
            "adminUsername": "[parameters('nodeVMAdminUsername')]",
            "adminPassword": "[parameters('nodeVMAdminPassword')]"
          },
          // commented for local deployment - aamit
          /*"storageProfile": {
                    "osDisk": {
                        "imageReference": {
                            "publisher": "[variables('imagePublisher')]",
                            "offer": "[variables('imageOffer')]",
                            "sku": "[variables('osVersion')]",
                            "version": "latest"
                        },
                        "osDisk": {
                            "name": "InfaOSDisk",
                            "caching": "ReadWrite",
                            "createOption": "FromImage",
                            "vhd": {
                                "uri": "[concat('https://', parameters('storageName'), '.blob.core.windows.net/vhds/', parameters('nodeVMNamePrefix'), uniqueString(resourceGroup().id, deployment().name), '1', '.osdisk.vhd')]"
                            }
                        }
                    }, */

          //Remove below profile and update above info before publishing. For Local deployment only - aamit
          "storageProfile": {
            "osDisk": {
              "osType": "Windows",
              "name": "DQ1011Image",
              "createOption": "FromImage",
              "image": {
                "uri": "https://dataqualitydisks572.blob.core.windows.net/system/Microsoft.Compute/Images/dq1011wincontainer/DQTemplate-osDisk.1242eb12-e121-4ada-a51f-31bbdbf56dff.vhd"
              },                                                     
              "vhd": {
                "uri": "[concat('https://','dataqualitydisks572','.blob.core.windows.net/dataqualitycontainer/', parameters('nodeVMNamePrefix'), add(variables('index'),1), '.osdisk.vhd')]"
              },
              "caching": "ReadWrite"
            }
          },


          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nodeVMNicPrefix'), add(variables('index'), 1)))]"
              }
            ]
          }
        },
        "resources": [
          {
            "name": "ScriptExtGVM",
            "type": "extensions",
            "location": "[parameters('location')]",
            "apiVersion": "2016-03-30",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('nodeVMNamePrefix'), add(variables('index'), 1))]"
            ],
            "tags": {
              "displayName": "informaticaextension",
              "provider": "[toUpper(parameters('informaticaTags').provider)]"
            },
            "properties": {
              "publisher": "Microsoft.Compute",
              "type": "CustomScriptExtension",
              "typeHandlerVersion": "1.8",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "[concat(variables('extScriptURI'),  variables('extScriptFile'))]"
                ]
              },
              "protectedSettings": {
                "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ', variables('extScriptFile'), ' -domainHost ', concat(parameters('nodeVMNamePrefix'), '1'), ' -domainName ', parameters('infaDomainName'), ' -domainUser \"', parameters('infaDomainUser'), '\" -domainPassword \"', parameters('infaDomainPassword'), '\" -nodeName ', parameters('infaNodeNamePrefix'), add(variables('index'), 1), ' -nodePort ', variables('infaNodePort'), ' -dbType ', variables('dbType'), ' -dbName ', variables('dbInstanceName'), ' -dbUser \"', parameters('dbUser'), '\" -dbPassword \"', parameters('dbPassword'), '\" -dbHost ', parameters('dbVMName'), ' -dbPort ', variables('dbPort'), ' -sitekeyKeyword \"', parameters('infaKeyword'), '\" -joinDomain ', variables('index'), ' -osUserName \"', parameters('nodeVMAdminUsername'), '\" -storageName \"', parameters('storageName'), '\" -storageKey ', listKeys(parameters('storageID'), '2016-01-01').keys[0].value, ' -infaLicense \"', parameters('infaDomainLicense'), '\"')]"
              }
            }
          }
        ]
      }
    ],
    "outputs": {
        "fqdn": {
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('nodeVMDNSName')), '2016-10-01').dnsSettings.fqdn]",
            "type": "string"
        }
    }
}
